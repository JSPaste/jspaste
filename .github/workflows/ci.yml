name: ci
on:
  push:
    branches: [ rolling ]
  pull_request:
    branches: [ rolling ]
    paths-ignore:
      - '*.md'
      - '.gitattributes'
      - '.gitignore'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  test:
    name: "Test with Node v${{ matrix.node }}"
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        node: [ 16.x, 18.x ]

    steps:
      - uses: actions/checkout@v3

      - name: Warming up (node)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Warming up (deps)
        run: npm ci

      - name: Cheking tests...
        run: npm run test

      - if: always() && github.repository_owner == 'jspaste'
        name: Saving coverage...
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
          if-no-files-found: warn

  analyse:
    name: Analysis
    runs-on: ubuntu-latest

    if: github.repository_owner == 'jspaste'
    steps:
      - uses: actions/checkout@v3

      - name: Warming up... (CodeQL)
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      - name: Building...
        run: npm run build

      - name: Analysing code...
        uses: github/codeql-action/analyze@v2

  coverage:
    name: Upload coverage
    needs: [ test, analyse ]
    runs-on: ubuntu-latest

    if: always() && github.repository_owner == 'jspaste' && github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Loading coverage...
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Report to Codecov...
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-final.json